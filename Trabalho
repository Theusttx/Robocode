package Atividade;
import robocode.*;
import java.awt.Color;

public class Pimpolho extends Robot
{

	public void run() {
	
			setBodyColor(Color.pink);
        	setGunColor(Color.pink);
        	setRadarColor(Color.pink);
        	setScanColor(Color.pink);
        	setBulletColor(Color.pink);
		while(true) {
		//metodo pra criar uma aleatoriedade no movimento do robo!!
		double distancia = Math.random()*300;
            double angulo = Math.random()*45;
            turnRight(angulo);
            ahead(distancia);
            ahead(100);
            turnGunRight(180);
            back(100);
            turnGunRight(150);
			}
	}


	public void onScannedRobot(ScannedRobotEvent e) {
		//aqui estamos pegando a distancia do alvo para calcular a potencia do tiro
		 double distancia = e.getDistance();
        if(distancia<200)
        {
           fire(3.5);	//se a distancia for menor que 200 pixels ele atira com sua potencia maxima
        }
        else if(distancia<500)
        {
           fire(2.5);	//se a distancia for maior que 200 ele ira disparar com 2,5 de forÃ§a
        }
        else if(distancia<800)
        {
           fire(1.5); //se for mais que 500 com uma potencia de 1,5
        }
        else
        {
           fire(0.5); // se for maior que isso com a sua menor potencia para nÃ£o desperdiÃ§ar muniÃ§Ã£
        }
		
	}


	public void onHitByBullet(HitByBulletEvent e) {
		
		double bearing = e.getBearing();//descobre de onde veio o tiro inimigo
    		if(bearing < 100){// se estiver com pouca energia vira e foge do inimigo
        		turnRight(-bearing);
        			ahead(100); //anda 100 pixels pra longe do inimigo
    }
    else
        turnRight(360); // scan
	}
	
	//quando atingir o robo deve virar e andar 100 pixels
	public void onHitWall(HitWallEvent e) {
		 double bearing = e.getBearing();
    	 turnRight(-bearing);
    	 ahead(100);
	}	
}
